<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>书海扬帆</title>
  
  <subtitle>遇见更好的自己</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.ljhedp.cn/"/>
  <updated>2019-03-15T14:53:39.474Z</updated>
  <id>https://www.ljhedp.cn/</id>
  
  <author>
    <name>书海扬帆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>矩阵快速幂优化动态规划-SHOI2013-超级跳马</title>
    <link href="https://www.ljhedp.cn/post/b0191352.html"/>
    <id>https://www.ljhedp.cn/post/b0191352.html</id>
    <published>2019-03-05T06:16:15.000Z</published>
    <updated>2019-03-15T14:53:39.474Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>现有一个$n$行$m$ 列的棋盘，一只马欲从棋盘的左上角跳到右下角。每一步它向右跳奇数列，且跳到本行或相邻行。跳越期间，马不能离开棋盘。例如，当$n = 3, m = 10$ 时，下图是一种可行的跳法。</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1g0rw8d6e1dj30c1049gly.jpg" alt="img"></p><p>试求跳法种数$mod\ 30011$。</p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>本题为采用矩阵速幂优化的动态规划，首先需要想出朴素的转移方程。</p><h3 id="10pts-朴素做法"><a href="#10pts-朴素做法" class="headerlink" title="10pts: 朴素做法"></a>10pts: 朴素做法</h3><p>我们用$dp[i][j]$表示超级跳马跳到$(i,j)$的总方案数，这样最终只需求出$dp[n][m]$即可。</p><p>考虑马能从什么地方跳到$(i,j)$。根据题目条件，从行和列的角度分别考虑。</p><p>首先考虑行。第$i$行，第$i+1$行和第$i-1$行都可以跳到第$i$行。</p><p>接着考虑列，只要是和第$j$列相差奇数列的列都可以跳到第$j​$列。因此</p><script type="math/tex; mode=display">dp[i][j] = \sum\limits_{k = 1}^{j/2} {\left( {dp[i][j - 2k + 1] + dp[i - 1][j - 2k + 1] + dp[i + 1][j - 2k + 1]} \right)} .</script><p>如果我们直接用朴素的循环计算，复杂度为$O(nm^2)$，只能得到10分，因此考虑在计算过程中优化。</p><h3 id="50pts：前缀和优化"><a href="#50pts：前缀和优化" class="headerlink" title="50pts：前缀和优化"></a>50pts：前缀和优化</h3><h3 id="100pts：矩阵快速幂"><a href="#100pts：矩阵快速幂" class="headerlink" title="100pts：矩阵快速幂"></a>100pts：矩阵快速幂</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;现有一个$n$行$m$ 列的棋盘，一只马欲从棋盘的左上角跳到右下角。每一步它向右跳奇数列，且跳到本行或相邻行。跳越期间，马不能离开棋盘。例如
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="dp" scheme="https://www.ljhedp.cn/tags/dp/"/>
    
      <category term="矩阵快速幂" scheme="https://www.ljhedp.cn/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>AI初探-01-图像风格化</title>
    <link href="https://www.ljhedp.cn/post/fce332f1.html"/>
    <id>https://www.ljhedp.cn/post/fce332f1.html</id>
    <published>2019-03-03T14:41:25.000Z</published>
    <updated>2019-03-03T15:12:07.496Z</updated>
    
    <content type="html"><![CDATA[<p>本学期的信息技术课居然讲<strong>AI</strong>，感谢学校为我们搭建了这样好的平台，让我们能够在OI与AI的道路上齐头并进。第一节课，首先介绍了一下pip中的pillow库，以及其中的一些图像风格化的知识。</p><p>首先，我们需要在<strong>cmd</strong>(Windows)或者<strong>terminal</strong>(Linux, Mac)中输入安装pillow库的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><p>如果是Linux或者Mac，由于默认的Python版本是Python 2，而pillow库在Python 2不可用，因此安装pillow库的命令需要改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pillow</span><br></pre></td></tr></table></figure><p>安装完后，我们就可以愉快地写代码啦~我尝试了一下模糊、浮雕和边缘增强三种效果QAQ</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image,ImageFilter</span><br><span class="line">i=Image.open(<span class="string">'test.jpg'</span>)</span><br><span class="line"><span class="comment"># 保存+格式转换</span></span><br><span class="line">i.save(<span class="string">'test_converted.png'</span>,<span class="string">'png'</span>)</span><br><span class="line"><span class="comment"># 风格化</span></span><br><span class="line">a=i.filter(ImageFilter.BLUR)</span><br><span class="line">a.save(<span class="string">'blur.jpg'</span>,<span class="string">'jpeg'</span>)</span><br><span class="line">b=i.filter(ImageFilter.EMBOSS)</span><br><span class="line">b.save(<span class="string">'emboss.jpg'</span>,<span class="string">'jpeg'</span>)</span><br><span class="line">c=i.filter(ImageFilter.EDGE_ENHANCE_MORE)</span><br><span class="line">c.save(<span class="string">'enhance_more.jpg'</span>,<span class="string">'jpeg'</span>)</span><br></pre></td></tr></table></figure><p>附上测试图片一张~QwQ</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fxjhtbhqmnj30js0jtwra.jpg" alt="用的微博图床，先这样吧~"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本学期的信息技术课居然讲&lt;strong&gt;AI&lt;/strong&gt;，感谢学校为我们搭建了这样好的平台，让我们能够在OI与AI的道路上齐头并进。第一节课，首先介绍了一下pip中的pillow库，以及其中的一些图像风格化的知识。&lt;/p&gt;
&lt;p&gt;首先，我们需要在&lt;strong&gt;cmd
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="信息技术课程" scheme="https://www.ljhedp.cn/tags/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="人工智能" scheme="https://www.ljhedp.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="图像风格化" scheme="https://www.ljhedp.cn/tags/%E5%9B%BE%E5%83%8F%E9%A3%8E%E6%A0%BC%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>江城子·己亥年春忆戊戌事</title>
    <link href="https://www.ljhedp.cn/post/83dc47eb.html"/>
    <id>https://www.ljhedp.cn/post/83dc47eb.html</id>
    <published>2019-03-03T14:36:56.000Z</published>
    <updated>2019-03-03T14:47:56.469Z</updated>
    
    <content type="html"><![CDATA[<p>春寒料峭写题忙。凿壁罢，又偷光。</p><p>晨霞夕照，群英聚机房。</p><p>仍记月下不眠夜，</p><p>面公式，闪灵光。</p><p>秋风萧瑟京城凉。</p><p>磨枪毕，上考场。</p><p>正解茫茫，部分分何方？</p><p>联赛放榜不见我，</p><p>蒟蒻叹，日方长。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;春寒料峭写题忙。凿壁罢，又偷光。&lt;/p&gt;
&lt;p&gt;晨霞夕照，群英聚机房。&lt;/p&gt;
&lt;p&gt;仍记月下不眠夜，&lt;/p&gt;
&lt;p&gt;面公式，闪灵光。&lt;/p&gt;
&lt;p&gt;秋风萧瑟京城凉。&lt;/p&gt;
&lt;p&gt;磨枪毕，上考场。&lt;/p&gt;
&lt;p&gt;正解茫茫，部分分何方？&lt;/p&gt;
&lt;p&gt;联赛放榜不见我，&lt;/p
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="书海扬帆的诗" scheme="https://www.ljhedp.cn/tags/%E4%B9%A6%E6%B5%B7%E6%89%AC%E5%B8%86%E7%9A%84%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>三角函数公式整理</title>
    <link href="https://www.ljhedp.cn/post/acc98d3b.html"/>
    <id>https://www.ljhedp.cn/post/acc98d3b.html</id>
    <published>2018-12-17T08:03:02.000Z</published>
    <updated>2018-12-23T08:38:31.310Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>“代数繁，几何难，三角公式记不完……”</p></blockquote><p>之前学三角函数的时候一直没好好背公式，导致题目做得<strong>乱七八糟</strong>。尽管公式比较多，但细细数来也就那么几十个，还是可以记住的。这里就做一个整理，边用电脑录入边背。</p><p>我是这样理解背三角函数的公式的：虽然可以全部不背，要用的时候自己动手推出来，但是速度显然慢了。就像浏览器的缓存一样，提前加载好网页上的图片、css等文件，访问速度一下子就快了很多。</p><h2 id="三角函数的意义"><a href="#三角函数的意义" class="headerlink" title="三角函数的意义"></a>三角函数的意义</h2><blockquote><p>基本概念：角的定义、终边、单位圆… (留坑待填)</p></blockquote><script type="math/tex; mode=display">\sin A=\frac{y}{r}</script><script type="math/tex; mode=display">\cos A=\frac{x}{r}</script><script type="math/tex; mode=display">\tan A=\frac{y}{x}</script><script type="math/tex; mode=display">\cot A=\frac{x}{y}</script><script type="math/tex; mode=display">\sin^2 \alpha + \cos ^2 \alpha=1</script><script type="math/tex; mode=display">\tan \alpha=\frac{\sin \alpha}{\cos \alpha}</script><script type="math/tex; mode=display">\cot \alpha= \frac{1}{\tan \alpha}</script><h2 id="三角函数与π"><a href="#三角函数与π" class="headerlink" title="三角函数与π"></a>三角函数与π</h2><div class="table-container"><table><thead><tr><th style="text-align:center">$\sin(\alpha+2k\pi)=\sin \alpha$</th><th style="text-align:center">$\cos(\alpha+2k\pi)=\cos \alpha$</th><th style="text-align:center">$\tan(\alpha+2k\pi)=\tan \alpha$</th></tr></thead><tbody><tr><td style="text-align:center">$\sin(-\alpha)=-\sin \alpha$</td><td style="text-align:center">$\cos(-\alpha)=\cos \alpha$</td><td style="text-align:center">$\tan(-\alpha)=-\tan \alpha$</td></tr><tr><td style="text-align:center">$\sin(\pi-\alpha)=\sin \alpha$</td><td style="text-align:center">$\cos(\pi-\alpha)=-\cos\alpha$</td><td style="text-align:center">$\tan(\pi-\alpha)=-\tan\alpha$</td></tr><tr><td style="text-align:center">$\sin(\pi+\alpha)=-\sin \alpha$</td><td style="text-align:center">$\cos(\pi+\alpha)=-\cos\alpha$</td><td style="text-align:center">$\tan(\pi+\alpha)=\tan\alpha$</td></tr><tr><td style="text-align:center">$\sin(\frac{\pi}{2}-\alpha)=\cos\alpha$</td><td style="text-align:center">$\cos(\frac{\pi}{2}-\alpha)=\sin\alpha$</td><td style="text-align:center">$\tan(\frac{\pi}{2}-\alpha)=\cot\alpha$</td></tr></tbody></table></div><h2 id="和角公式-差角公式"><a href="#和角公式-差角公式" class="headerlink" title="和角公式/差角公式"></a>和角公式/差角公式</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;“代数繁，几何难，三角公式记不完……”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;之前学三角函数的时候一直没好好背公式，导致题目做得&lt;strong&gt;乱七八糟&lt;/strong&gt;。尽管公式比较多，但细细数来也就那么几十个，还是可以记住的。这里就做一个整
      
    
    </summary>
    
      <category term="数学竞赛" scheme="https://www.ljhedp.cn/categories/%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="数学竞赛" scheme="https://www.ljhedp.cn/tags/%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B/"/>
    
      <category term="学习笔记" scheme="https://www.ljhedp.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="三角函数" scheme="https://www.ljhedp.cn/tags/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>史记-七十列传-太史公自序</title>
    <link href="https://www.ljhedp.cn/post/7a133b5c.html"/>
    <id>https://www.ljhedp.cn/post/7a133b5c.html</id>
    <published>2018-12-07T13:33:38.000Z</published>
    <updated>2018-12-23T02:19:50.341Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>语文老师留的周末积累作业。</p><p>第一次读长达9400多字的文言文，有些懵。还是争取慢慢适应吧，文言文博大精深。</p><p>以下为正文部分。</p></blockquote><p>　昔在颛顼，命南正重以司天，北正黎以司地。唐虞之际，绍重黎之後，使复典之，至于夏商，故重黎氏世序天地。其在周，程伯休甫其後也。当周宣王时，失其守而为司马氏。司马氏世典周史。惠襄之间，司马氏去周適晋。晋中军随会奔秦，而司马氏入少梁。</p><p>　　自司马氏去周适晋，分散，或在卫，或在赵，或在秦。其在卫者，相中山。在赵者，以传剑论显，蒯聩其後也。在秦者名错，与张仪争论，於是惠王使错将伐蜀，遂拔，因而守之。错孙靳，事武安君白起。而少梁更名曰夏阳。靳与武安君阬赵长平军，还而与之俱赐死杜邮，葬於华池。靳孙昌，昌为秦主铁官，当始皇之时。蒯聩玄孙卬为武信君将而徇朝歌。诸侯之相王，王卬於殷。汉之伐楚，卬归汉，以其地为河内郡。昌生无泽，无泽为汉巿长。无泽生喜，喜为五大夫，卒，皆葬高门。喜生谈，谈为太史公。</p><p>　　太史公学天官於唐都，受易於杨何，习道论於黄子。太史公仕於建元元封之间，愍学者之不达其意而师悖，乃论六家之要指曰：</p><p>　　易大传：“天下一致而百虑，同归而殊涂。”夫阴阳、儒、墨、名、法、道德，此务为治者也，直所从言之异路，有省不省耳。尝窃观阴阳之术，大祥而众忌讳，使人拘而多所畏；然其序四时之大顺，不可失也。儒者博而寡要，劳而少功，是以其事难尽从；然其序君臣父子之礼，列夫妇长幼之别，不可易也。墨者俭而难遵，是以其事不可遍循；然其彊本节用，不可废也。法家严而少恩；然其正君臣上下之分，不可改矣。名家使人俭而善失真；然其正名实，不可不察也。道家使人精神专一，动合无形，赡足万物。其为术也，因阴阳之大顺，采儒墨之善，撮名法之要，与时迁移，应物变化，立俗施事，无所不宜，指约而易操，事少而功多。儒者则不然。以为人主天下之仪表也，主倡而臣和，主先而臣随。如此则主劳而臣逸。至於大道之要，去健羡，绌聪明，释此而任术。夫神大用则竭，形大劳则敝。形神骚动，欲与天地长久，非所闻也。</p><p>　　夫阴阳四时、八位、十二度、二十四节各有教令，顺之者昌，逆之者不死则亡，未必然也，故曰“使人拘而多畏”。夫春生夏长，秋收冬藏，此天道之大经也，弗顺则无以为天下纲纪，故曰“四时之大顺，不可失也”。</p><p>　　夫儒者以六艺为法。六艺经传以千万数，累世不能通其学，当年不能究其礼，故曰“博而寡要，劳而少功”。若夫列君臣父子之礼，序夫妇长幼之别，虽百家弗能易也。</p><p>　　墨者亦尚尧舜道，言其德行曰：“堂高三尺，土阶三等，茅茨不翦，采椽不刮。食土簋，啜土刑，粝粱之食，藜霍之羹。夏日葛衣，冬日鹿裘。”其送死，桐棺三寸，举音不尽其哀。教丧礼，必以此为万民之率。使天下法若此，则尊卑无别也。夫世异时移，事业不必同，故曰“俭而难遵”。要曰彊本节用，则人给家足之道也。此墨子之所长，虽百长弗能废也。</p><p>　　法家不别亲疏，不殊贵贱，一断於法，则亲亲尊尊之恩绝矣。可以行一时之计，而不可长用也，故曰“严而少恩”。若尊主卑臣，明分职不得相逾越，虽百家弗能改也。</p><p>　　名家苛察缴绕，使人不得反其意，专决於名而失人情，故曰“使人俭而善失真”。若夫控名责实，参伍不失，此不可不察也。</p><p>　　道家无为，又曰无不为，其实易行，其辞难知。其术以虚无为本，以因循为用。无成埶，无常形，故能究万物之情。不为物先，不为物後，故能为万物主。有法无法，因时为业；有度无度，因物与合。故曰“圣人不朽，时变是守。虚者道之常也，因者君之纲”也。群臣并至，使各自明也。其实中其声者谓之端，实不中其声者谓之窾。窾言不听，奸乃不生，贤不肖自分，白黑乃形。在所欲用耳，何事不成。乃合大道，混混冥冥。光翟天下，复反无名。凡人所生者神也，所讬者形也。神大用则竭，形大劳则敝，形神离则死。死者不可复生，离者不可复反，故圣人重之。由是观之，神者生之本也，形者生之具也。不先定其神，而曰“我有以治天下”，何由哉？</p><p>　　太史公既掌天官，不治民。有子曰迁。</p><p>　　迁生龙门，耕牧河山之阳。年十岁则诵古文。二十而南游江、淮，上会稽，探禹穴，闚九疑，浮於沅、湘；北涉汶、泗，讲业齐、鲁之都，观孔子之遗风，乡射邹、峄；戹困鄱、薛、彭城，过梁、楚以归。於是迁仕为郎中，奉使西征巴、蜀以南，南略邛、笮、昆明，还报命。</p><p>　　是岁天子始建汉家之封，而太史公留滞周南，不得与从事，故发愤且卒。而子迁適使反，见父於河洛之间。太史公执迁手而泣曰：“余先周室之太史也。自上世尝显功名於虞夏，典天官事。後世中衰，绝於予乎？汝复为太史，则续吾祖矣。今天子接千岁之统，封泰山，而余不得从行，是命也夫，命也夫！余死，汝必为太史；为太史，无忘吾所欲论著矣。且夫孝始於事亲，中於事君，终於立身。扬名於後世，以显父母，此孝之大者。夫天下称诵周公，言其能论歌文武之德，宣周邵之风，达太王王季之思虑，爰及公刘，以尊后稷也。幽厉之後，王道缺，礼乐衰，孔子脩旧起废，论诗书，作春秋，则学者至今则之。自获麟以来四百有馀岁，而诸侯相兼，史记放绝。今汉兴，海内一统，明主贤君忠臣死义之士，余为太史而弗论载，废天下之史文，余甚惧焉，汝其念哉！”迁俯首流涕曰：“小子不敏，请悉论先人所次旧闻，弗敢阙。”</p><p>　　卒三岁而迁为太史令，史记石室金匮之书。五年而当太初元年，十一月甲子朔旦冬至，天历始改，建於明堂，诸神受纪。</p><p>　　太史公曰：“先人有言：‘自周公卒五百岁而有孔子。孔子卒後至於今五百岁，有能绍明世，正易传，继春秋，本诗书礼乐之际？’ 意在斯乎！意在斯乎！小子何敢让焉。”</p><p>　　上大夫壶遂曰：“昔孔子何为而作春秋哉？”太史公曰：“余闻董生曰：‘周道衰废，孔子为鲁司寇，诸侯害之，大夫壅之。孔子知言之不用，道之不行也，是非二百四十二年之中，以为天下仪表，贬天子，退诸侯，讨大夫，以达王事而已矣。’ 子曰：‘我欲载之空言，不如见之於行事之深切著明也。’ 夫春秋，上明三王之道，下辨人事之纪，别嫌疑，明是非，定犹豫，善善恶恶，贤贤贱不肖，存亡国，继绝世，补敝起废，王道之大者也。易著天地阴阳四时五行，故长於变；礼经纪人伦，故长於行；书记先王之事，故长於政；诗记山川谿谷禽兽草木牝牡雌雄，故长於风；乐乐所以立，故长於和；春秋辩是非，故长於治人。是故礼以节人，乐以发和，书以道事，诗以达意，易以道化，春秋以道义。拨乱世反之正，莫近於春秋。春秋文成数万，其指数千。万物之散聚皆在春秋。春秋之中，弑君三十六，亡国五十二，诸侯奔走不得保其社稷者不可胜数。察其所以，皆失其本已。故易曰‘失之豪釐，差以千里’ 。故曰‘臣弑君，子弑父，非一旦一夕之故也，其渐久矣’ 。故有国者不可以不知春秋，前有谗而弗见，後有贼而不知。为人臣者不可以不知春秋，守经事而不知其宜，遭变事而不知其权。为人君父而不通於春秋之义者，必蒙首恶之名。为人臣子而不通於春秋之义者，必陷篡弑之诛，死罪之名。其实皆以为善，为之不知其义，被之空言而不敢辞。夫不通礼义之旨，至於君不君，臣不臣，父不父，子不子。夫君不君则犯，臣不臣则诛，父不父则无道，子不子则不孝。此四行者，天下之大过也。以天下之大过予之，则受而弗敢辞。故春秋者，礼义之大宗也。夫礼禁未然之前，法施已然之後；法之所为用者易见，而礼之所为禁者难知。”</p><p>　　壶遂曰：“孔子之时，上无明君，下不得任用，故作春秋，垂空文以断礼义，当一王之法。今夫子上遇明天子，下得守职，万事既具，咸各序其宜，夫子所论，欲以何明？”</p><p>　　太史公曰：“唯唯，否否，不然。余闻之先人曰：‘伏羲至纯厚，作易八卦。尧舜之盛，尚书载之，礼乐作焉。汤武之隆，诗人歌之。春秋采善贬恶，推三代之德，襃周室，非独刺讥而已也。’ 汉兴以来，至明天子，获符瑞，封禅，改正朔，易服色，受命於穆清，泽流罔极，海外殊俗，重译款塞，请来献见者，不可胜道。臣下百官力诵圣德，犹不能宣尽其意。且士贤能而不用，有国者之耻；主上明圣而德不布闻，有司之过也。且余尝掌其官，废明圣盛德不载，灭功臣世家贤大夫之业不述，堕先人所言，罪莫大焉。余所谓述故事，整齐其世传，非所谓作也，而君比之於春秋，谬矣。”</p><p>　　於是论次其文。七年而太史公遭李陵之祸，幽於縲绁。乃喟然而叹曰：“是余之罪也夫！是余之罪也夫！身毁不用矣。”退而深惟曰：“夫诗书隐约者，欲遂其志之思也。昔西伯拘羑里，演周易；孔子戹陈蔡，作春秋；屈原放逐，著离骚；左丘失明，厥有国语；孙子膑脚，而论兵法；不韦迁蜀，世传吕览；韩非囚秦，说难、孤愤；诗三百篇，大抵贤圣发愤之所为作也。此人皆意有所郁结，不得通其道也，故述往事，思来者。”於是卒述陶唐以来，至于麟止，自黄帝始。</p><p>　　维昔黄帝，法天则地，四圣遵序，各成法度；唐尧逊位，虞舜不台；厥美帝功，万世载之。作五帝本纪第一。</p><p>　　维禹之功，九州攸同，光唐虞际，德流苗裔；夏桀淫骄，乃放鸣条。作夏本纪第二。</p><p>　　维契作商，爰及成汤；太甲居桐，德盛阿衡；武丁得说，乃称高宗；帝辛湛湎，诸侯不享。作殷本纪第三。</p><p>　　维弃作稷，德盛西伯；武王牧野，实抚天下；幽厉昏乱，既丧酆镐；陵迟至赧；洛邑不祀。作周本纪第四。</p><p>　　维秦之先，伯翳佐禹；穆公思义，悼豪之旅；以人为殉，诗歌黄鸟；昭襄业帝。作秦本纪第五。</p><p>　　始皇既立，并兼六国，销锋铸鐻，维偃干革，尊号称帝，矜武任力；二世受运，子婴降虏。作始皇本纪第六。</p><p>　　秦失其道，豪桀并扰；项梁业之，子羽接之；杀庆救赵，诸侯立之；诛婴背怀，天下非之。作项羽本纪第七。</p><p>　　子羽暴虐，汉行功德；愤发蜀汉，还定三秦；诛籍业帝，天下惟宁，改制易俗。作高祖本纪第八。</p><p>　　惠之早霣，诸吕不台；崇彊禄、产，诸侯谋之；杀隐幽友，大臣洞疑，遂及宗祸。作吕太后本纪第九。</p><p>　　汉既初兴，继嗣不明，迎王践祚，天下归心；蠲除肉刑，开通关梁，广恩博施，厥称太宗。作孝文本纪第十。</p><p>　　诸侯骄恣，吴首为乱，京师行诛，七国伏辜，天下翕然，大安殷富。作孝景本纪第十一。</p><p>　　汉兴五世，隆在建元，外攘夷狄，内脩法度，封禅，改正朔，易服色。作今上本纪第十二。</p><p>　　维三代尚矣，年纪不可考，盖取之谱牒旧闻，本于兹，於是略推，作三代世表第一。</p><p>　　幽厉之後，周室衰微，诸侯专政，春秋有所不纪；而谱牒经略，五霸更盛衰，欲睹周世相先後之意，作十二诸侯年表第二。</p><p>　　春秋之後，陪臣秉政，彊国相王；以至于秦，卒并诸夏，灭封地，擅其号。作六国年表第三。</p><p>　　秦既暴虐，楚人发难，项氏遂乱，汉乃扶义征伐；八年之间，天下三嬗，事繁变众，故详著秦楚之际月表第四。</p><p>　　汉兴已来，至于太初百年，诸侯废立分削，谱纪不明，有司靡踵，彊弱之原云以世。作汉兴已来诸侯年表第五。</p><p>　　维高祖元功，辅臣股肱，剖符而爵，泽流苗裔，忘其昭穆，或杀身陨国。作高祖功臣侯者年表第六。</p><p>　　惠景之间，维申功臣宗属爵邑，作惠景间侯者年表第七。</p><p>　　北讨彊胡，南诛劲越，征伐夷蛮，武功爰列。作建元以来侯者年表第八。</p><p>　　诸侯既彊，七国为从，子弟众多，无爵封邑，推恩行义，其埶销弱，德归京师。作王子侯者年表第九。</p><p>　　国有贤相良将，民之师表也。维见汉兴以来将相名臣年表，贤者记其治，不贤者彰其事。作汉兴以来将相名臣年表第十。</p><p>　　维三代之礼，所损益各殊务，然要以近性情，通王道，故礼因人质为之节文，略协古今之变。作礼书第一。</p><p>　　乐者，所以移风易俗也。自雅颂声兴，则已好郑卫之音，郑卫之音所从来久矣。人情之所感，远俗则怀。比乐书以述来古，作乐书第二。</p><p>　　非兵不彊，非德不昌，黄帝、汤、武以兴，桀、纣、二世以崩，可不慎欤？司马法所从来尚矣，太公、孙、吴、王子能绍而明之，切近世，极人变。作律书第三。</p><p>　　律居阴而治阳，历居阳而治阴，律历更相治，间不容翲忽。五家之文怫异，维太初之元论。作历书第四。</p><p>　　星气之书，多杂禨祥，不经；推其文，考其应，不殊。比集论其行事，验于轨度以次，作天官书第五。</p><p>　　受命而王，封禅之符罕用，用则万灵罔不禋祀。追本诸神名山大川礼，作封禅书第六。</p><p>　　维禹浚川，九州攸宁；爰及宣防，决渎通沟。作河渠书第七。</p><p>　　维币之行，以通农商；其极则玩巧，并兼兹殖，争於机利，去本趋末。作平准书以观事变，第八。</p><p>　　太伯避历，江蛮是適；文武攸兴，古公王迹。阖庐弑僚，宾服荆楚；夫差克齐，子胥鸱夷；信嚭亲越，吴国既灭。嘉伯之让，作吴世家第一。</p><p>　　申、吕肖矣，尚父侧微，卒归西伯，文武是师；功冠群公，缪权于幽；番番黄发，爰飨营丘。不背柯盟，桓公以昌，九合诸侯，霸功显彰。田阚争宠，姜姓解亡。嘉父之谋，作齐太公世家第二。</p><p>　　依之违之，周公绥之；愤发文德，天下和之；辅翼成王，诸侯宗周。隐桓之际，是独何哉？三桓争彊，鲁乃不昌。嘉旦金縢，作周公世家第三。</p><p>　　武王克纣，天下未协而崩。成王既幼，管蔡疑之，淮夷叛之，於是召公率德，安集王室，以宁东土。燕之禅，乃成祸乱。嘉甘棠之诗，作燕世家第四。</p><p>　　管蔡相武庚，将宁旧商；及旦摄政，二叔不飨；杀鲜放度，周公为盟；大任十子，周以宗彊。嘉仲悔过，作管蔡世家第五。</p><p>　　王後不绝，舜禹是说；维德休明，苗裔蒙烈。百世享祀，爰周陈杞，楚实灭之。齐田既起，舜何人哉？作陈杞世家第六。</p><p>　　收殷馀民，叔封始邑，申以商乱，酒材是告，及朔之生，卫顷不宁；南子恶蒯聩，子父易名。周德卑微，战国既彊，卫以小弱，角独後亡。喜彼康诰，作卫世家第七。</p><p>　　嗟箕子乎！嗟箕子乎！正言不用，乃反为奴。武庚既死，周封微子。襄公伤於泓，君子孰称。景公谦德，荧惑退行。剔成暴虐，宋乃灭亡。喜微子问太师，作宋世家第八。</p><p>　　武王既崩，叔虞邑唐。君子讥名，卒灭武公。骊姬之爱，乱者五世；重耳不得意，乃能成霸。六卿专权，晋国以秏。嘉文公锡珪鬯，作晋世家第九。</p><p>　　重黎业之，吴回接之；殷之季世，粥子牒之。周用熊绎，熊渠是续。庄王之贤，乃复国陈；既赦郑伯，班师华元。怀王客死，兰咎屈原；好谀信谗，楚并於秦。嘉庄王之义，作楚世家第十。</p><p>　　少康之子，实宾南海，文身断发，鼋鳝与处，既守封禺，奉禹之祀。句践困彼，乃用种、蠡。嘉句践夷蛮能脩其德，灭彊吴以尊周室，作越王句践世家第十一。桓公之东，太史是庸。及侵周禾，王人是议。祭仲要盟，郑久不昌。子产之仁，绍世称贤。三晋侵伐，郑纳於韩。嘉厉公纳惠王，作郑世家第十二。</p><p>　　维骥騄耳，乃章造父。赵夙事献，衰续厥绪。佐文尊王，卒为晋辅。襄子困辱，乃禽智伯。主父生缚，饿死探爵。王迁辟淫，良将是斥。嘉鞅讨周乱，作赵世家第十三。</p><p>　　毕万爵魏，卜人知之。及绛戮干，戎翟和之。文侯慕义，子夏师之。惠王自矜，齐秦攻之。既疑信陵，诸侯罢之。卒亡大梁，王假厮之。嘉武佐晋文申霸道，作魏世家第十四。</p><p>　　韩厥阴德，赵武攸兴。绍绝立废，晋人宗之。昭侯显列，申子庸之。疑非不信，秦人袭之。嘉厥辅晋匡周天子之赋，作韩世家第十五。</p><p>　　完子避难，適齐为援，阴施五世，齐人歌之。成子得政，田和为侯。王建动心，乃迁于共。嘉威、宣能拨浊世而独宗周，作田敬仲完世家第十六。</p><p>　　周室既衰，诸侯恣行。仲尼悼礼废乐崩，追脩经术，以达王道，匡乱世反之於正，见其文辞，为天下制仪法，垂六之统纪於後世。作孔子世家第十七。</p><p>　　桀、纣失其道而汤、武作，周失其道而春秋作。秦失其政，而陈涉发迹，诸侯作难，风起云蒸，卒亡秦族。天下之端，自涉发难。作陈涉世家第十八。</p><p>　　成皋之台，薄氏始基。诎意適代，厥崇诸窦。栗姬偩贵，王氏乃遂。陈后太骄，卒尊子夫。嘉夫德若斯，作外戚世家十九。</p><p>　　汉既谲谋，禽信於陈；越荆剽轻，乃封弟交为楚王，爰都彭城，以彊淮泗，为汉宗籓。戊溺於邪，礼复绍之。嘉游辅祖，作楚元王世家二十。</p><p>　　维祖师旅，刘贾是与；为布所袭，丧其荆、吴。营陵激吕，乃王琅邪；怵午信齐，往而不归，遂西入关，遭立孝文，获复王燕。天下未集，贾、泽以族，为汉籓辅。作荆燕世家第二十一。</p><p>　　天下已平，亲属既寡；悼惠先壮，实镇东土。哀王擅兴，发怒诸吕，驷钧暴戾，京师弗许。厉之内淫，祸成主父。嘉肥股肱，作齐悼惠王世家第二十二。</p><p>　　楚人围我荥阳，相守三年；萧何填抚山西，推计踵兵，给粮食不绝，使百姓爱汉，不乐为楚。作萧相国世家第二十三。</p><p>　　与信定魏，破赵拔齐，遂弱楚人。续何相国，不变不革，黎庶攸宁。嘉参不伐功矜能，作曹相国世家第二十四。</p><p>　　运筹帷幄之中，制胜於无形，子房计谋其事，无知名，无勇功，图难於易，为大於细。作留侯世家第二十五。</p><p>　　六奇既用，诸侯宾从於汉；吕氏之事，平为本谋，终安宗庙，定社稷。作陈丞相世家第二十六。</p><p>　　诸吕为从，谋弱京师，而勃反经合於权；吴楚之兵，亚夫驻於昌邑，以戹齐赵，而出委以梁。作绛侯世家第二十七。</p><p>　　七国叛逆，蕃屏京师，唯梁为扞；偩爱矜功，几获于祸。嘉其能距吴楚，作梁孝王世家第二十八。</p><p>　　五宗既王，亲属洽和，诸侯大小为籓，爰得其宜，僭拟之事稍衰贬矣。作五宗世家第二十九。</p><p>　　三子之王，文辞可观。作三王世家第三十。</p><p>　　末世争利，维彼奔义；让国饿死，天下称之。作伯夷列传第一。</p><p>　　晏子俭矣，夷吾则奢；齐桓以霸，景公以治。作管晏列传第二。</p><p>　　李耳无为自化，清净自正；韩非揣事情，循埶理。作老子韩非列传第三。</p><p>　　自古王者而有司马法，穰苴能申明之。作司马穰苴列传第四。</p><p>　　非信廉仁勇不能传兵论剑，与道同符，内可以治身，外可以应变，君子比德焉。作孙子吴起列传第五。</p><p>　　维建遇谗，爰及子奢，尚既匡父，伍员奔吴。作伍子胥列传第六。</p><p>　　孔氏述文，弟子兴业，咸为师傅，崇仁厉义。作仲尼弟子列传第七。</p><p>　　鞅去卫適秦，能明其术，彊霸孝公，後世遵其法。作商君列传第八。</p><p>　　天下患衡秦毋餍，而苏子能存诸侯，约从以抑贪彊。作苏秦列传第九。</p><p>　　六国既从亲，而张仪能明其说，复散解诸侯。作张仪列传第十。</p><p>　　秦所以东攘雄诸侯，樗里、甘茂之策。作樗里甘茂列传第十一。</p><p>　　苞河山，围大梁，使诸侯敛手而事秦者，魏厓之功。作穰侯列传第十二。</p><p>　　南拔鄢郢，北摧长平，遂围邯郸，武安为率；破荆灭赵，王翦之计。作白起王翦列传第十三。</p><p>　　猎儒墨之遗文，明礼义之统纪，绝惠王利端，列往世兴衰。作孟子荀卿列传第十四。</p><p>　　好客喜士，士归于薛，为齐扞楚魏。作孟尝君列传第十五。</p><p>　　争冯亭以权，如楚以救邯郸之围，使其君复称於诸侯。作平原君虞卿列传第十六。</p><p>　　能以富贵下贫贱，贤能诎於不肖，唯信陵君为能行之。作魏公子列传第十七。</p><p>　　以身徇君，遂脱彊秦，使驰说之士南乡走楚者，黄歇之义。作春申君列传第十八</p><p>　　能忍卼於魏齐，而信威於彊秦，推贤让位，二子有之。作范睢蔡泽列传第十九。</p><p>　　率行其谋，连五国兵，为弱燕报彊齐之雠，雪其先君之耻。作乐毅列传第二十。</p><p>　　能信意彊秦，而屈体廉子，用徇其君，俱重於诸侯。作廉颇蔺相如列传第二十一。</p><p>　　湣王既失临淄而奔莒，唯田单用即墨破走骑劫，遂存齐社稷。作田单列传第二十二。</p><p>　　能设诡说解患於围城，轻爵禄，乐肆志。作鲁仲连邹阳列传第二十三。</p><p>　　作辞以讽谏，连类以争义，离骚有之。作屈原贾生列传第二十四。</p><p>　　结子楚亲，使诸侯之士斐然争入事秦。作吕不韦列传第二十五。</p><p>　　曹子匕首，鲁获其田，齐明其信；豫让义不为二心。作刺客列传第二十六。</p><p>　　能明其画，因时推秦，遂得意於海内，斯为谋首。作李斯列传第二十七。</p><p>　　为秦开地益众，北靡匈奴，据河为塞，因山为固，建榆中。作蒙恬列传第二十八。</p><p>　　填赵塞常山以广河内，弱楚权，明汉王之信於天下。作张耳陈馀列传第二十九。</p><p>　　收西河、上党之兵，从至彭城；越之侵掠梁地以苦项羽。作魏豹彭越列传第三十。</p><p>　　以淮南叛楚归汉，汉用得大司马殷，卒破子羽于垓下。作黥布列传第三十一。</p><p>　　楚人迫我京索，而信拔魏赵，定燕齐，使汉三分天下有其二，以灭项籍。作淮阴侯列传第三十二。</p><p>　　楚汉相距巩洛，而韩信为填颍川，卢绾绝籍粮饷。作韩信卢绾列传第三十三。</p><p>　　诸侯畔项王，唯齐连子羽城阳，汉得以间遂入彭城。作田儋列传第三十四。</p><p>　　攻城野战，获功归报，哙、商有力焉，非独鞭策，又与之脱难。作樊郦列传第三十五。</p><p>　　汉既初定，文理未明，苍为主计，整齐度量，序律历。作张丞相列传第三十六。</p><p>　　结言通使，约怀诸侯；诸侯咸亲，归汉为籓辅。作郦生陆贾列传第三十七。</p><p>　　欲详知秦楚之事，维周緤常从高祖，平定诸侯。作傅靳蒯成列传第三十八。</p><p>　　徙彊族，都关中，和约匈奴；明朝廷礼，次宗庙仪法。作刘敬叔孙通列传第三十九。</p><p>　　能摧刚作柔，卒为列臣；栾公不劫於埶而倍死。作季布栾布列传第四十。</p><p>　　敢犯颜色以达主义，不顾其身，为国家树长画。作袁盎朝错列传第四十一。</p><p>　　守法不失大理，言古贤人，增主之明。作张释之冯唐列传第四十二。</p><p>　　敦厚慈孝，讷於言，敏於行，务在鞠躬，君子长者。作万石张叔列传第四十三。</p><p>　　守节切直，义足以言廉，行足以厉贤，任重权不可以非理挠。作田叔列传第四十四。</p><p>　　扁鹊言医，为方者宗，守数精明；後世序，弗能易也，而仓公可谓近之矣。作扁鹊仓公列传第四十五。</p><p>　　维仲之省，厥濞王吴，遭汉初定，以填抚江淮之间。作吴王濞列传第四十六。</p><p>　　吴楚为乱，宗属唯婴贤而喜士，士乡之，率师抗山东荥阳。作魏其武安列传第四十七。</p><p>　　智足以应近世之变，宽足用得人。作韩长孺列传第四十八。</p><p>　　勇於当敌，仁爱士卒，号令不烦，师徒乡之。作李将军列传第四十九。</p><p>　　自三代以来，匈奴常为中国患害；欲知彊弱之时，设备征讨，作匈奴列传第五十。</p><p>　　直曲塞，广河南，破祁连，通西国，靡北胡。作卫将军骠骑列传第五十一。</p><p>　　大臣宗室以侈靡相高，唯弘用节衣食为百吏先。作平津侯列传第五十二。</p><p>　　汉既平中国，而佗能集杨越以保南籓，纳贡职。作南越列传第五十三。</p><p>　　吴之叛逆，瓯人斩濞，葆守封禺为臣。作东越列传第五十四。</p><p>　　燕丹散乱辽间，满收其亡民，厥聚海东，以集真籓，葆塞为外臣。作朝鲜列传第五十五。</p><p>　　唐蒙使略通夜郎，而邛笮之君请为内臣受吏。作西南夷列传第五十六。</p><p>　　子虚之事，大人赋说，靡丽多夸，然其指风谏，归於无为。作司马相如列传第五十七。</p><p>　　黥布叛逆，子长国之，以填江淮之南，安剽楚庶民。作淮南衡山列传第五十八。</p><p>　　奉法循理之吏，不伐功矜能，百姓无称，亦无过行。作循吏列传第五十九。</p><p>　　正衣冠立於朝廷，而群臣莫敢言浮说，长孺矜焉；好荐人，称长者，壮有溉。作汲郑列传第六十。</p><p>　　自孔子卒，京师莫崇庠序，唯建元元狩之间，文辞粲如也。作儒林列传第六十一。</p><p>　　民倍本多巧，奸轨弄法，善人不能化，唯一切严削为能齐之。作酷吏列传第六十二。</p><p>　　汉既通使大夏，而西极远蛮，引领内乡，欲观中国。作大宛列传第六十三。</p><p>　　救人於戹，振人不赡，仁者有乎；不既信，不倍言，义者有取焉。作游侠列传第六十四。</p><p>　　夫事人君能说主耳目，和主颜色，而获亲近，非独色爱，能亦各有所长。作佞幸列传第六十五。</p><p>　　不流世俗，不争埶利，上下无所凝滞，人莫之害，以道之用。作滑稽列传第六十六。</p><p>　　齐、楚、秦、赵为日者，各有俗所用。欲循观其大旨，作日者列传第六十七。</p><p>　　三王不同龟，四夷各异卜，然各以决吉凶。略闚其要，作龟策列传第六十八。</p><p>　　布衣匹夫之人，不害於政，不妨百姓，取与以时而息财富，智者有采焉。作货殖列传第六十九。</p><p>　　维我汉继五帝末流，接三代业。周道废，秦拨去古文，焚灭诗书，故明堂石室金匮玉版图籍散乱。於是汉兴，萧何次律令，韩信申军法，张苍为章程，叔孙通定礼仪，则文学彬彬稍进，诗书往往间出矣。自曹参荐盖公言黄老，而贾生、晁错明申、商，公孙弘以儒显，百年之间，天下遗文古事靡不毕集太史公。太史公仍父子相续纂其职。曰：“於戏！余维先人尝掌斯事，显於唐虞，至于周，复典之，故司马氏世主天官。至於余乎，钦念哉！钦念哉！”罔罗天下放失旧闻，王迹所兴，原始察终，见盛观衰，论考之行事，略推三代，录秦汉，上记轩辕，下至于兹，著十二本纪，既科条之矣。并时异世，年差不明，作十表。礼乐损益，律历改易，兵权山川鬼神，天人之际，承敝通变，作八书。二十八宿环北辰，三十辐共一毂，运行无穷，辅拂股肱之臣配焉，忠信行道，以奉主上，作三十世家。扶义俶傥，不令己失时，立功名於天下，作七十列传。凡百三十篇，五十二万六千五百字，为太史公书。序略，以拾遗补，成一家之言，厥协六经异传，整齐百家杂语，藏之名山，副在京师，俟後世圣人君子。第七十。</p><p>　　太史公曰：余述历黄帝以来至太初而讫，百三十篇。</p><p>　　太史良才，寔纂先德。周游历览，东西南北。事覈词简，是称实录。报任投书，申李下狱。惜哉残缺，非才妄续！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;语文老师留的周末积累作业。&lt;/p&gt;
&lt;p&gt;第一次读长达9400多字的文言文，有些懵。还是争取慢慢适应吧，文言文博大精深。&lt;/p&gt;
&lt;p&gt;以下为正文部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　昔在颛顼，命南正重以司天，北正黎以司地。唐虞之际，
      
    
    </summary>
    
      <category term="文学" scheme="https://www.ljhedp.cn/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="随笔" scheme="https://www.ljhedp.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>字符串+模拟-洛谷P1207-USACO1.2-双重回文数</title>
    <link href="https://www.ljhedp.cn/post/532fbd9a.html"/>
    <id>https://www.ljhedp.cn/post/532fbd9a.html</id>
    <published>2018-11-26T22:42:19.000Z</published>
    <updated>2018-12-23T02:19:50.046Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,s,tot;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3625</span>],cnt;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n/<span class="number">2</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(a[i]!=a[n-i+<span class="number">1</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">convert</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> d)</span> </span>&#123;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n) &#123;</span><br><span class="line">a[++cnt]=n%d;n/=d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=s+<span class="number">1</span>;;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=<span class="number">10</span>;j++) &#123;</span><br><span class="line">convert(i,j);</span><br><span class="line"><span class="keyword">if</span>(pd(a,cnt)) res++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(res&gt;=<span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">tot++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tot==n) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.luogu.org/problemnew/show/P1207" target="_blank" rel="noopener">题目</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="字符串" scheme="https://www.ljhedp.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="模拟" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>大模拟-洛谷P1205-USACO1.2-方块转换</title>
    <link href="https://www.ljhedp.cn/post/92501fda.html"/>
    <id>https://www.ljhedp.cn/post/92501fda.html</id>
    <published>2018-11-26T15:02:41.000Z</published>
    <updated>2018-12-23T02:19:50.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>一块N x N（1&lt;=N&lt;=10）正方形的黑白瓦片的图案要被转换成新的正方形图案。写一个程序来找出将原始图案按照以下列转换方法转换成新图案的最小方式：</p><p>1：转90度：图案按顺时针转90度。</p><p>2：转180度：图案按顺时针转180度。</p><p>3：转270度：图案按顺时针转270度。</p><p>4：反射：图案在水平方向翻转（以中央铅垂线为中心形成原图案的镜像）。</p><p>5：组合：图案在水平方向翻转，然后再按照1到3之间的一种再次转换。</p><p>6：不改变：原图案不改变。</p><p>7：无效转换：无法用以上方法得到新图案。</p><p>如果有多种可用的转换方法，请选择序号最小的那个。</p><p>只使用1—7中的一个步骤来完成这次转换。</p><h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><p>输入格式：</p><p>第一行： 单独的一个整数N。</p><p>第二行到第N+1行： N行每行N个字符（不是“@”就是“-”）；这是转换前的正方形。</p><p>第N+2行到第2*N+1行： N行每行N个字符（不是“@”就是“-”）；这是转换后的正方形。</p><p>输出格式：</p><p>单独的一行包括1到7之间的一个数字（在上文已描述）表明需要将转换前的正方形变为转换后的正方形的转换方法。</p><h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p>输入样例#1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">@-@</span><br><span class="line">---</span><br><span class="line">@@-</span><br><span class="line">@-@</span><br><span class="line">@--</span><br><span class="line">--@</span><br></pre></td></tr></table></figure><p>输出样例#1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>一道纯模拟的好题。考察的就是是否细心。</p><p>写了100+行，应该……还算清晰明了吧。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> a[maxn][maxn],b[maxn][maxn],t[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> a[<span class="number">15</span>][<span class="number">15</span>],<span class="keyword">char</span> b[<span class="number">15</span>][<span class="number">15</span>])</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="keyword">if</span>(b[i][j]!=a[i][j])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(t,<span class="number">0</span>,<span class="keyword">sizeof</span>(t));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Data</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">debug</span><span class="params">(<span class="keyword">char</span> a[<span class="number">15</span>][<span class="number">15</span>])</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">c1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[j][n-i+<span class="number">1</span>]=a[i][j];</span><br><span class="line"><span class="comment">//debug(t);</span></span><br><span class="line"><span class="keyword">if</span>(check(b,t)) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;<span class="built_in">exit</span>(<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">c2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[n-i+<span class="number">1</span>][n-j+<span class="number">1</span>]=a[i][j];</span><br><span class="line"><span class="comment">//debug(t);</span></span><br><span class="line"><span class="keyword">if</span>(check(b,t)) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>;<span class="built_in">exit</span>(<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">c3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[n-j+<span class="number">1</span>][i]=a[i][j];</span><br><span class="line"><span class="comment">//debug(t);</span></span><br><span class="line"><span class="keyword">if</span>(check(b,t)) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">3</span>;<span class="built_in">exit</span>(<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">c4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[i][j]=a[i][n-j+<span class="number">1</span>];</span><br><span class="line"><span class="comment">//debug(t);</span></span><br><span class="line"><span class="keyword">if</span>(check(b,t)) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">4</span>;<span class="built_in">exit</span>(<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">c5</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="literal">false</span>;</span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[i][j]=a[i][n-j+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">a[i][j]=t[i][j];</span><br><span class="line"><span class="comment">//Try C1</span></span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[j][n-i+<span class="number">1</span>]=a[i][j];</span><br><span class="line"><span class="keyword">if</span>(check(b,t)) ok=<span class="literal">true</span>;</span><br><span class="line"><span class="comment">//Try C2</span></span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[n-i+<span class="number">1</span>][n-j+<span class="number">1</span>]=a[i][j];</span><br><span class="line"><span class="keyword">if</span>(check(b,t)) ok=<span class="literal">true</span>;</span><br><span class="line"><span class="comment">//Try C3</span></span><br><span class="line">clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">t[n-j+<span class="number">1</span>][i]=a[i][j];</span><br><span class="line"><span class="keyword">if</span>(check(b,t)) ok=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(ok) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">5</span>;<span class="built_in">exit</span>(<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">c6</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(check(a,b)) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">6</span>;<span class="built_in">exit</span>(<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Get_Data();</span><br><span class="line">c1();c2();c3();c4();c5();c6();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">7</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;一块N x N（1&amp;lt;=N&amp;lt;=10）正方形的黑白瓦片的图案要被转换成新的正方形图案。写一个程序来找出将原始图案按照
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="模拟" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="精品" scheme="https://www.ljhedp.cn/tags/%E7%B2%BE%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>Python机器学习初探-01-感知器</title>
    <link href="https://www.ljhedp.cn/post/c9b8a948.html"/>
    <id>https://www.ljhedp.cn/post/c9b8a948.html</id>
    <published>2018-11-26T14:08:02.000Z</published>
    <updated>2018-12-23T02:19:49.943Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
  </entry>
  
  <entry>
    <title>线段树-洛谷P1204-挤牛奶</title>
    <link href="https://www.ljhedp.cn/post/e3e1ec50.html"/>
    <id>https://www.ljhedp.cn/post/e3e1ec50.html</id>
    <published>2018-11-25T14:56:41.000Z</published>
    <updated>2018-12-23T02:19:50.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>三个农民每天清晨5点起床，然后去牛棚给3头牛挤奶。第一个农民在300秒(从5点开始计时)给他的牛挤奶，一直到1000秒。第二个农民在700秒开始，在 1200秒结束。第三个农民在1500秒开始2100秒结束。期间最长的至少有一个农民在挤奶的连续时间为900秒(从300秒到1200秒)，而最长的无人挤奶的连续时间(从挤奶开始一直到挤奶结束)为300秒(从1200秒到1500秒)。</p><p>你的任务是编一个程序，读入一个有N个农民(1 &lt;= N &lt;= 5000)挤N头牛的工作时间列表，计算以下两点(均以秒为单位):</p><p>最长至少有一人在挤奶的时间段。</p><p>最长的无人挤奶的时间段。（从有人挤奶开始算起）</p><h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><p>输入格式：</p><p>Line 1:</p><p>一个整数N。</p><p>Lines 2..N+1:</p><p>每行两个小于1000000的非负整数，表示一个农民的开始时刻与结束时刻。</p><p>输出格式：</p><p>一行，两个整数，即题目所要求的两个答案。</p><h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p>输入样例#1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">300 1000</span><br><span class="line">700 1200</span><br><span class="line">1500 2100</span><br></pre></td></tr></table></figure><p>输出样例#1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">900 300</span><br></pre></td></tr></table></figure><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>USA Cow Olympiad的题目真是优质…</p><p>开始想到拿一个桶模拟，但是数据范围太大，于是拿线段树来做。</p><p>我们把每个时间段转化成一个点，每个点的值即为长度。我们把有人挤奶的时间段记为正数，无人挤奶的时间段记为负数，问题就转化为了求解区间最大值与区间最小值。</p><p>将每个时间段按照左端点排序存储到线段树中，只需要建树即可，最后的答案为所有点的最大值与所有点的最小值。</p><p>注意给最小值赋初值的时候要与0取一遍最小值，否则只有1个时间段的时候最小值就会变为正数，影响到解法的正确性。</p><p>细节不少，详情请见代码。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5050</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mid ((l+r)&gt;&gt;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson rt&lt;&lt;1,l,mid</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson rt&lt;&lt;1|1,mid+1,r</span></span><br><span class="line"><span class="keyword">int</span> minn[maxn&lt;&lt;<span class="number">2</span>],maxx[maxn&lt;&lt;<span class="number">2</span>],z[maxn&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tim</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">&#125;t[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(tim p,tim q)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> p.l&lt;q.l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">minn[rt]=min(minn[rt&lt;&lt;<span class="number">1</span>],minn[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">maxx[rt]=max(maxx[rt&lt;&lt;<span class="number">1</span>],maxx[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r) &#123;</span><br><span class="line">minn[rt]=min(<span class="number">0</span>,z[l]);</span><br><span class="line">maxx[rt]=z[l];</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">build(lson);build(rson);pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;t[i].l&gt;&gt;t[i].r;</span><br><span class="line">sort(t+<span class="number">1</span>,t+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">int</span> L=t[<span class="number">1</span>].l;</span><br><span class="line"><span class="keyword">int</span> R=t[<span class="number">1</span>].r;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(t[i].l&lt;=R &amp;&amp; t[i].r&gt;R) R=t[i].r;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t[i].r&lt;=R &amp;&amp; t[i].l&gt;L) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">z[++cnt]=R-L;</span><br><span class="line">z[++cnt]=-(t[i].l-R);</span><br><span class="line">L=t[i].l;R=t[i].r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">z[++cnt]=R-L;</span><br><span class="line">build(<span class="number">1</span>,<span class="number">1</span>,cnt);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;maxx[<span class="number">1</span>]&lt;&lt;<span class="string">' '</span>&lt;&lt;-minn[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;三个农民每天清晨5点起床，然后去牛棚给3头牛挤奶。第一个农民在300秒(从5点开始计时)给他的牛挤奶，一直到1000秒。第二
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="模拟" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="线段树" scheme="https://www.ljhedp.cn/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>网络流入门——基本概念及定理，最大流，最小费用最大流</title>
    <link href="https://www.ljhedp.cn/post/defa2767.html"/>
    <id>https://www.ljhedp.cn/post/defa2767.html</id>
    <published>2018-11-22T10:10:36.000Z</published>
    <updated>2018-12-23T02:19:50.240Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro."></a>Intro.</h2><p>本文着重介绍网络流的一些基本概念和定理，以及最大流、费用流的基本模型。详细的例题解析以及更加深入的探究会在后文提及。本文适合网络流初学者。</p><blockquote><p>要学会网络流，你需要掌握：</p><ul><li>图论基本知识</li><li>图的存储、遍历</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro.&quot;&gt;&lt;/a&gt;Intro.&lt;/h2&gt;&lt;p&gt;本文着重介绍网络流的一些基本概念和定理，以及最大流、费用流的基本模型。详细的例题解析以及更加深入的探究会在后文提
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="学习笔记" scheme="https://www.ljhedp.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="模板" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="网络流" scheme="https://www.ljhedp.cn/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>Splay与LCT-学习笔记</title>
    <link href="https://www.ljhedp.cn/post/ed71cfc.html"/>
    <id>https://www.ljhedp.cn/post/ed71cfc.html</id>
    <published>2018-11-17T02:42:07.000Z</published>
    <updated>2018-12-23T02:19:49.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Splay是一种支持插入、删除、区间翻转、查询等操作的数据结构，在省选/NOI及以上比赛中有着非常广泛的应用。而LCT(Link-Cut-Tree)这种数据结构是Splay的一个“加强版“，其使用Splay作为辅助树，使用LCT我们可以维护动态的森林。</p><h1 id="Splay"><a href="#Splay" class="headerlink" title="Splay"></a>Splay</h1><p>yyb的模板好强呀！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> n,tot,root;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> c=<span class="string">' '</span>;<span class="keyword">int</span> v=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">'0'</span>||c&gt;<span class="string">'9'</span>) &#123;c=getchar();<span class="keyword">if</span>(c==<span class="string">'-'</span>) f=<span class="number">-1</span>;&#125;</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>) &#123;v=v*<span class="number">10</span>+c-<span class="string">'0'</span>;c=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> v*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Splay</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> ch[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> dad;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="keyword">int</span> sz;</span><br><span class="line">&#125;t[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">t[u].sz=t[t[u].ch[<span class="number">0</span>]].sz+t[t[u].ch[<span class="number">1</span>]].sz+t[u].cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> y=t[x].dad;</span><br><span class="line"><span class="keyword">int</span> z=t[y].dad;</span><br><span class="line"><span class="keyword">int</span> k=t[y].ch[<span class="number">1</span>]==x;</span><br><span class="line">t[z].ch[t[z].ch[<span class="number">1</span>]==y]=x;</span><br><span class="line">t[x].dad=z;</span><br><span class="line">t[y].ch[k]=t[x].ch[k^<span class="number">1</span>];</span><br><span class="line">t[t[x].ch[k^<span class="number">1</span>]].dad=y;</span><br><span class="line">t[x].ch[k^<span class="number">1</span>]=y;</span><br><span class="line">t[y].dad=x;</span><br><span class="line">pushup(y);pushup(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> goal)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(t[x].dad!=goal) &#123;</span><br><span class="line"><span class="keyword">int</span> y=t[x].dad;</span><br><span class="line"><span class="keyword">int</span> z=t[y].dad;</span><br><span class="line"><span class="keyword">if</span>(z!=goal) (t[z].ch[<span class="number">0</span>]==y)^(t[y].ch[<span class="number">0</span>]==x)?rotate(x):rotate(y);</span><br><span class="line">rotate(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(goal==<span class="number">0</span>) root=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root,dad=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(u &amp;&amp; t[u].val!=x) &#123;</span><br><span class="line">dad=u;</span><br><span class="line">u=t[u].ch[x&gt;t[u].val];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(u) t[u].cnt++;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">u=++tot;</span><br><span class="line"><span class="keyword">if</span>(dad) t[dad].ch[x&gt;t[dad].val]=u;</span><br><span class="line">t[tot].ch[<span class="number">0</span>]=<span class="number">0</span>;t[tot].ch[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">t[tot].dad=dad;t[tot].val=x;</span><br><span class="line">t[tot].cnt=<span class="number">1</span>;t[tot].sz=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">splay(u,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">while</span>(t[u].ch[x&gt;t[u].val] &amp;&amp; x!=t[u].val)</span><br><span class="line">u=t[u].ch[x&gt;t[u].val];</span><br><span class="line">splay(u,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Next</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span> </span>&#123;</span><br><span class="line">find(x);</span><br><span class="line"><span class="keyword">int</span> u=root;</span><br><span class="line"><span class="keyword">if</span>((t[u].val&gt;x &amp;&amp; f)||(t[u].val&lt;x &amp;&amp; !f)) <span class="keyword">return</span> u;</span><br><span class="line">u=t[u].ch[f];</span><br><span class="line"><span class="keyword">while</span>(t[u].ch[f^<span class="number">1</span>]) u=t[u].ch[f^<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> last=Next(u,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> nxt=Next(u,<span class="number">1</span>);</span><br><span class="line">splay(last,<span class="number">0</span>);splay(nxt,last);</span><br><span class="line"><span class="keyword">int</span> del=t[nxt].ch[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(t[del].cnt&gt;<span class="number">1</span>) &#123;</span><br><span class="line">t[del].cnt--;</span><br><span class="line">splay(del,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> t[nxt].ch[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">kth</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root;</span><br><span class="line"><span class="keyword">if</span>(t[u].sz&lt;x) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">25</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> y=t[u].ch[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(x&gt;t[y].sz+t[u].cnt) &#123;</span><br><span class="line">x-=t[y].sz+t[u].cnt;</span><br><span class="line">u=t[u].ch[<span class="number">1</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(t[y].sz&gt;=x) u=y;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> t[u].val;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=INT_MAX;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">insert(-inf);</span><br><span class="line">insert(+inf);</span><br><span class="line">n=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> opt=read();</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>) insert(read());</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>) Delete(read());</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>) &#123;</span><br><span class="line">find(read());</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[t[root].ch[<span class="number">0</span>]].sz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,kth(read()+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">5</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[Next(read(),<span class="number">0</span>)].val);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">6</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[Next(read(),<span class="number">1</span>)].val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="LCT"><a href="#LCT" class="headerlink" title="LCT"></a>LCT</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;Splay是一种支持插入、删除、区间翻转、查询等操作的数据结构，在省选/NOI及以上比赛中有着非常广泛的应用。而LCT(Link-Cut-T
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="学习笔记" scheme="https://www.ljhedp.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="模板" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="Splay" scheme="https://www.ljhedp.cn/tags/Splay/"/>
    
      <category term="LCT" scheme="https://www.ljhedp.cn/tags/LCT/"/>
    
      <category term="平衡树" scheme="https://www.ljhedp.cn/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
      <category term="动态树" scheme="https://www.ljhedp.cn/tags/%E5%8A%A8%E6%80%81%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>线性基学习笔记</title>
    <link href="https://www.ljhedp.cn/post/7e52e099.html"/>
    <id>https://www.ljhedp.cn/post/7e52e099.html</id>
    <published>2018-11-16T11:55:19.000Z</published>
    <updated>2018-12-23T02:19:50.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定n个整数（数字可能重复），求在这些数中选取任意个，使得他们的异或和最大。</p><h2 id="异或的一些性质"><a href="#异或的一些性质" class="headerlink" title="异或的一些性质"></a>异或的一些性质</h2><p>$xor$函数的运算规则可以用一句话简要概括——相同为1，不同为0.</p><div class="table-container"><table><thead><tr><th style="text-align:center">$xor$</th><th style="text-align:center">1</th><th style="text-align:center">0</th></tr></thead><tbody><tr><td style="text-align:center"><strong>1</strong></td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center"><strong>0</strong></td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table></div><p>因为相同的数异或等于0，因此我们来思考这样一个有趣的问题：</p><p>给你一串数字，有些数出现了2次，其中只有一个数只出现了1次。求只出现1次的数是多少。</p><p>我们根据相同的数异或等于0这个性质，只需<strong>从头到尾异或一遍</strong>，即可找出那个数。</p><p>（这个性质好像在洛谷上有一道题，但是题号忘记了）</p><h2 id="线性基问题的解法"><a href="#线性基问题的解法" class="headerlink" title="线性基问题的解法"></a>线性基问题的解法</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>对于一组数$a_1,a_2,…,a_n$，它们的线性基为</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给定n个整数（数字可能重复），求在这些数中选取任意个，使得他们的异或和最大。&lt;/p&gt;
&lt;h2 id=&quot;异或的一些性质&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="学习笔记" scheme="https://www.ljhedp.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="模板" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="线性基" scheme="https://www.ljhedp.cn/tags/%E7%BA%BF%E6%80%A7%E5%9F%BA/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2018提高组题解</title>
    <link href="https://www.ljhedp.cn/post/c0856590.html"/>
    <id>https://www.ljhedp.cn/post/c0856590.html</id>
    <published>2018-11-16T10:16:03.000Z</published>
    <updated>2018-12-23T02:19:49.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h1><h2 id="2-货币系统"><a href="#2-货币系统" class="headerlink" title="2. 货币系统"></a>2. 货币系统</h2><h3 id="25pts"><a href="#25pts" class="headerlink" title="25pts"></a>25pts</h3><p>部分分类型：特判</p><p>剩余分错因：算法错误</p><p>根据数据满足的条件特判。</p><h3 id="60pts"><a href="#60pts" class="headerlink" title="60pts"></a>60pts</h3><p>部分分类型：错误的结论</p><p>剩余分错因：算法错误</p><p>考场上想到的做法，不过因为读不懂NOI Linux上浮点数越界的报错提示，没改过来代码，只得了25分。</p><p>将所有数从小到大排序，分别为$a_1,a_2,…,a_n$. 统计每个数除以最小的数$a_1$的余数（包括$a_1$本身），然后扔到一个set里面，输出这个set的size即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=<span class="number">500050</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=INT_MAX;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c=<span class="string">' '</span>;<span class="keyword">int</span> v=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">'0'</span> || c&gt;<span class="string">'9'</span>) &#123;</span><br><span class="line">        c=getchar();<span class="keyword">if</span>(c==<span class="string">'-'</span>) f=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">'0'</span> &amp;&amp; c&lt;=<span class="string">'9'</span>) &#123;</span><br><span class="line">        v=v*<span class="number">10</span>+c-<span class="string">'0'</span>;c=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> solve1 &#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">2</span>]%a[<span class="number">1</span>]==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"2\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> solve2 &#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">        <span class="keyword">int</span> mod=a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            a[i]%=mod;</span><br><span class="line">            s.insert(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//freopen("money.in","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("money.out","w",stdout);</span></span><br><span class="line">    T=read();</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        n=read();<span class="keyword">bool</span> ok=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            a[i]=read();</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="number">1</span>) &#123;</span><br><span class="line">                ok=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ok) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1\n"</span>);<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>) solve1::work();</span><br><span class="line">        <span class="keyword">else</span> solve2::work();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fclose(stdin);</span></span><br><span class="line">    <span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="100pts"><a href="#100pts" class="headerlink" title="100pts"></a>100pts</h3><p>60分的做法能不能给我们一些启发呢？</p><p>首先根据数学知识进行一些推导，根据样例中<strong>3 19 10 6</strong>这组数据，答案为2. 我们发现19=10+6+3, 6=3+3，也就是说，如果货币系统中存在面值$i​$,使得$i​$元的货币可以被若干个比它小的面值之和来表示的话，那么$i​$元的货币没必要存在。因此，最终的答案<strong>一定小于等于给定的面值总数</strong>，且选定的面值一定是给定所有面值的<strong>子集</strong>。</p><p>我们将所有的面值从小到大排序，循环一遍，看一下每个面值<strong>是否可以被比它小的面值</strong>表示出来，如果可以，那么没必要选择；如果不行，那么必须选择。在循环的过程中，统计所求的最小值并输出最终答案。</p><p>时间复杂度$O(Tna_i)$.</p><p>由于CCF抛弃了老爷机，换成了<strong>i7-8700k</strong>处理器和<strong>32GB</strong>内存，因此在时限内通过没有问题。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> n,mx,ans=<span class="number">0</span>,a[<span class="number">105</span>],f[<span class="number">25005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sol</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);f[<span class="number">0</span>]=<span class="number">1</span>;mx=a[n];ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(!f[a[i]]) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j+a[i]&lt;=mx;j++)<span class="keyword">if</span>(f[j])f[j+a[i]]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)sol();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Day1&quot;&gt;&lt;a href=&quot;#Day1&quot; class=&quot;headerlink&quot; title=&quot;Day1&quot;&gt;&lt;/a&gt;Day1&lt;/h1&gt;&lt;h2 id=&quot;2-货币系统&quot;&gt;&lt;a href=&quot;#2-货币系统&quot; class=&quot;headerlink&quot; title=&quot;2. 货币
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="大赛札记" scheme="https://www.ljhedp.cn/tags/%E5%A4%A7%E8%B5%9B%E6%9C%AD%E8%AE%B0/"/>
    
      <category term="NOIp题解" scheme="https://www.ljhedp.cn/tags/NOIp%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>组合趣题-情人节的玫瑰</title>
    <link href="https://www.ljhedp.cn/post/40d7171c.html"/>
    <id>https://www.ljhedp.cn/post/40d7171c.html</id>
    <published>2018-11-11T13:52:46.000Z</published>
    <updated>2018-12-23T02:19:50.232Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>n对夫妇过情人节，每一位男士送每一位女士若干朵玫瑰，若一位男士送给别人妻子的花的数量总和≥送给自己妻子的花的数量，那么妻子就会不高兴。当他们互相赠送完毕后发现，对于任意一位妻子，她均可以把所有的男士分为两组，使得每组男士送给自己的花的数目之和一样多。</p><p>求证：至少有一位妻子会不高兴。</p><h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>白俄罗斯竞赛题。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>反证法。本题虽然披着组合数学难题的外衣，但本质上是一道代数题。运用数学语言和符号将所有已知条件都表示出来，就能看出端倪。</p><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>将所有男士编号为${a_1},{a_2},{a_3},…,{a_n} $, 所有女士编号为${b_1},{b_2},{b_3},…,{b_n}$.用${A[i][j]} $表示第i位丈夫送给第j位妻子的花的数量。</p><p>则本题就是考察一个$n*n$的二维数组。</p><p>反证法，假设没有妻子不高兴，则对于所有的$ j \in \{1,2,…,n\} $, 均有$ A[j][j]&gt;\sum\limits_{i = 1}^n {A[j][i]}-A[j][j]$.</p><p>移项，化简得$A[j][j] &gt; \sum\limits_{i = 1}^n {A[j][i]}$.</p><p>对于所有的$j \in \{1,2,…,n\}$，均有<script type="math/tex">\sum\limits_{i = 1}^n {A[i][j]} \ge 2A[j][j]</script>.</p><p><script type="math/tex">\therefore 2\sum\limits_{j = 1}^n {A[j][j] > \sum\limits_{i = 1}^n {\sum\limits_{j = 1}^n {A[j][i] = } } } \sum\limits_{i = 1}^n {\sum\limits_{j = 1}^n {A[i][j] \ge } } 2\sum\limits_{j = 1}^n {A[j][j]}</script>.</p><p><strong>矛盾！</strong>证毕！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;n对夫妇过情人节，每一位男士送每一位女士若干朵玫瑰，若一位男士送给别人妻子的花的数量总和≥送给自己妻子的花的数量，那么妻子就会不高兴。当他们
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="数论" scheme="https://www.ljhedp.cn/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="组合数学" scheme="https://www.ljhedp.cn/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>贪心-洛谷P1106-删数问题</title>
    <link href="https://www.ljhedp.cn/post/56fdd9cc.html"/>
    <id>https://www.ljhedp.cn/post/56fdd9cc.html</id>
    <published>2018-11-11T13:51:43.000Z</published>
    <updated>2018-12-23T02:19:50.319Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1106" target="_blank" rel="noopener">题目传送门</a></p><p>这道题目是一道非常经典的贪心问题。由于n的位数非常多，而且删除操作改变的是每个数位，所以我们非常自然地能想到用字符串来存储n。<br>接下来我们来思考贪心策略， 首先我思考的是，将字符串中最大的s个数字都删去，但是我发现我是错的。比如36251314这个字符串，要删去2位的话，就不应该删6和4，而应该删6和2。综上所述，我们可以得出本题目的贪心策略：从高位到低位搜索，如果各位数字均递增，则删去最后一个数字，否则删除第一个递减区间的首字符。举个栗子，如果1234567要删除2位的话，我们必定是删除6和7，而3654321如果要删除2位的话，我们则要选择删去6和5.<br>重复以上过程s次，剩下的数字串便是问题的解了。<br>这里再谈一下0的问题，由于前导0不能输出<del>（你见过有人把123写成0123或是000123嘛）</del>所以我们再来一个布尔变量flag来记录每一位是否为0.但是这个时候还出现了一个问题，就是这个字符串被删除完了，只剩下一个0怎么办？比如说样例7，10删除1位之后，我们还是必须要输出0的。因此我们再建立一个cnt变量来存储输出的数字的个数。如果个数为0，那么说明整个字符串均为0，此时我们还需要输出一个0.<br>话说了这么多，你应该能看懂了吧，下面分享下代码。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> n[<span class="number">500</span>];</span><br><span class="line"><span class="keyword">int</span> s,len;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;n);<span class="comment">//读入数据</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">500</span>;i++) <span class="keyword">if</span>(n[i]!=<span class="string">'\0'</span>) len++;<span class="comment">//计算字符串长度</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;<span class="comment">//读入数据，我们一共要删除s个字符</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=s;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len<span class="number">-1</span>;j++)<span class="comment">//从字符串的第一个字符开始查找，len是字符串的长度</span></span><br><span class="line">            <span class="keyword">if</span>(n[j]&gt;n[j+<span class="number">1</span>])&#123;<span class="comment">//如果找到了递减区间</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;len<span class="number">-1</span>;k++) n[k]=n[k+<span class="number">1</span>];</span><br><span class="line">                <span class="comment">//那么就删除字符串n的第j个字符，后面字符往前调整。</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;    </span><br><span class="line">            len--;<span class="comment">//由于已经删除了一个元素，所以长度-1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt;<span class="comment">//记录被输出字符的个数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(n[i]!=<span class="string">'0'</span>) flag=<span class="literal">true</span>;<span class="comment">//如果不是0，则说明可以输出，flag=1</span></span><br><span class="line">            <span class="keyword">if</span>(flag) <span class="built_in">cout</span>&lt;&lt;n[i],cnt++;<span class="comment">//如果可以输出那就输出，同时个数增加1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">0</span>) <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;<span class="comment">//如果啥都没输出，就说明整个字符串都是0，此事我们还要输出一个0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//愉快地结束了</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1106&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这道题目是一道非常经典的贪心问题。由于n的位数非常多，而且删除操作改变
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="模板" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="精品" scheme="https://www.ljhedp.cn/tags/%E7%B2%BE%E5%93%81/"/>
    
      <category term="贪心" scheme="https://www.ljhedp.cn/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2005-采药</title>
    <link href="https://www.ljhedp.cn/post/992026f8.html"/>
    <id>https://www.ljhedp.cn/post/992026f8.html</id>
    <published>2018-11-11T13:50:00.000Z</published>
    <updated>2018-12-23T02:19:49.930Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> d[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> t[maxn],w[maxn];</span><br><span class="line"><span class="keyword">int</span> time1,m,ans=<span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;time1,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;t[i],&amp;w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=time1;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            d[i][j]=d[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(t[i]&lt;=j)</span><br><span class="line">                d[i][j]=max(d[i][j],d[i<span class="number">-1</span>][j-t[i]]+w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=time1;i++) </span><br><span class="line">        ans=max(ans,d[m][i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="dp" scheme="https://www.ljhedp.cn/tags/dp/"/>
    
      <category term="背包问题" scheme="https://www.ljhedp.cn/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>转载-不用显式高精度计算2的幂</title>
    <link href="https://www.ljhedp.cn/post/c7e7df71.html"/>
    <id>https://www.ljhedp.cn/post/c7e7df71.html</id>
    <published>2018-11-11T13:44:53.000Z</published>
    <updated>2018-12-23T02:19:50.322Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote>来自某位巨佬在WC上学的技巧。</blockquote></p><p></p><h2>题目</h2><br>给定正整数$n(n&lt;=15000)$，计算$2^n-1$的值。<p></p><p></p><h2>解题思路</h2><br>这道题目是非常典型的高精度，但是数据范围乍一看有些吓人。普通的高精如果不慎，甚至会超时。<p></p><p></p><h2>适用范围</h2><br>仅适用于计算$2^n$的精确值，且 $|n|&lt;=2^{14}$<p></p><p>浮点数能精确表示$2^n$，因为大部分浮点数内部都以2为底数，n的范围与浮点数类型有关。常用浮点数最高精度的long double也只有15位阶码。</p><p></p><h2>使用方法</h2><br>直接使用pow函数即可计算。<p></p><p></p><h3>C++</h3><br>字符串流输出<p></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">cout</span>.precision(n&gt;<span class="number">0</span>?<span class="number">0</span>:-n);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;<span class="built_in">pow</span>(<span class="number">2.0L</span>,n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>printf输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.*Lf\n"</span>,n&gt;<span class="number">0</span>?<span class="number">0</span>:-n,powl(<span class="number">2.0L</span>,n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>浮点数常量的L后缀表示long double</em></p><p></p><h3>Windows下scanf/printf</h3><br>Windows下通常使用MinGW，部分版本可能无法正常使用<code>%lld</code>或<code>%Lf</code>。<p></p><p>解决方法非常简单，在程序首部加入：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __USE_MINGW_ANSI_STDIO 1</span></span><br></pre></td></tr></table></figure></p><p></p><h2>题解</h2><br>由于n的范围刚好可以使用上述技巧，而且-1也很方便，直接在最低位-1即可，显然不会退位。<p></p><p></p><h3>程序清单</h3><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">stringstream</span> ss;</span><br><span class="line">    ss.precision(<span class="number">0</span>);</span><br><span class="line">    ss&lt;&lt;fixed&lt;&lt;<span class="built_in">pow</span>(<span class="number">2.0L</span>,n);</span><br><span class="line">    <span class="built_in">string</span> s=ss.str();</span><br><span class="line">    s[s.length()<span class="number">-1</span>]--;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>这里利用了字符串流，当然用<code>sprintf</code>也完全没有问题。实测比手写高精度快很多，代码也很简单。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;blockquote&gt;来自某位巨佬在WC上学的技巧。&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt;题目&lt;/h2&gt;&lt;br&gt;给定正整数$n(n&amp;lt;=15000)$，计算$2^n-1$的值。&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt;解题思路&lt;/h2&gt;&lt;br&gt;这道题目
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="学习笔记" scheme="https://www.ljhedp.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="模板" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="数论" scheme="https://www.ljhedp.cn/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>蔡勒公式算日期</title>
    <link href="https://www.ljhedp.cn/post/2554bad4.html"/>
    <id>https://www.ljhedp.cn/post/2554bad4.html</id>
    <published>2018-11-11T13:40:43.000Z</published>
    <updated>2019-02-04T01:25:21.674Z</updated>
    
    <content type="html"><![CDATA[<p>转载自：<a href="https://www.cnblogs.com/igaoshang/articles/Zeller.html" target="_blank" rel="noopener">https://www.cnblogs.com/igaoshang/articles/Zeller.html</a></p><p>历史上的某一天是星期几？未来的某一天是星期几？关于这个问题，有很多计算公式，其中最著名的是蔡勒 (Zeller)公式：</p><script type="math/tex; mode=display">W = \left( {\left[ {\frac{C}{4}} \right] - 2C + Y + \left[ {\frac{Y}{4}} \right] + \left[ {13 \times \fracNaN{5}} \right] + D - 1} \right){\rm{\% }}7$$.公式都是基于公历的置闰规则来考虑。 公式中的符号含义如下：> • W：星期>> • C：世纪数减一 (年份前两位数)>> • Y：年(年份后两位数)>> • M：月(M的取值范围为3至14，即在蔡勒公式中，某年的1、2月要看作上一年的13、14月来计算，比如2003 年1月1日要看作 2002 年的13月1日来计算)>> • D ：日>> • []：称作高斯符号，代表取整，即只要整数部分>> • mod：同余‎这里代表括号里的答案除以7后的余数算出来的除以7，余数是几就是星期几。如果余数是0，则为星期日。不过，以上的公式都只适合于**1582年(我国明朝万历十年)10 月15日之后**的情形。罗马教皇**格里高利十三世**在1582年组织了一批天文学家，根据哥白尼日心说计算出来的数据，对儒略历作了修改。将1582年10月5 日到14日之间的10天宣布撤销，即10月4日之后为10月15日。若要计算的日期是在1582年10月4日或之前，其公式为 $$W=Y+[Y/4]+[C/4]-2C+[13×(M+1)/5]+D+3.</script><p> 以2049年10月1日(100周年国庆)为例，用蔡勒(Zeller)公式进行计算，过程如下：</p><p>$W=Y+[Y/4]+[C/4]-2C+[26×(M+1)/10]+D-1​$</p><p>$=49+[49/4]+[20/4]-2×20+[26×(10+1)/10]+1-1<br>=49+[12.25]+5-40+[28.6]​$</p><p>$=49+12+5-40+28​$</p><p>$=54.​$</p><p>54除以7余5， 即2049年10月1日（100周年国庆）是星期五。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转载自：&lt;a href=&quot;https://www.cnblogs.com/igaoshang/articles/Zeller.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/igaoshang/art
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="数学竞赛" scheme="https://www.ljhedp.cn/tags/%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B/"/>
    
      <category term="数论" scheme="https://www.ljhedp.cn/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>RMQ-洛谷P1816-忠诚</title>
    <link href="https://www.ljhedp.cn/post/3a0b86e.html"/>
    <id>https://www.ljhedp.cn/post/3a0b86e.html</id>
    <published>2018-11-11T13:39:55.000Z</published>
    <updated>2018-12-23T02:19:49.945Z</updated>
    
    <content type="html"><![CDATA[<p>谁说暴力铁定拿低分！！！</p><p>本题数据非常弱，大模拟90分，除了最后一个点TLE了，其他都能很快AC，如果真是到了赛场上，没时间做这个题或者觉得代码难度较高的话，暴力的解法不妨一试！<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,a[<span class="number">200100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">        <span class="keyword">int</span> ans=a[x];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=x;j&lt;=y;j++)   ans=min(a[j],ans);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>下面放一下ST表实现的正解，这是很标准的RMQ问题~<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> st[<span class="number">100010</span>][<span class="number">22</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">st_init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;<span class="number">1</span>&lt;&lt;j&lt;=m;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=m;i++)</span><br><span class="line">st[i][j]=min(st[i][j<span class="number">-1</span>],st[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">st_ask</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k=log2(r-l+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> min(st[l][k],st[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;st[i][<span class="number">0</span>]);</span><br><span class="line">st_init();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,st_ask(x,y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;谁说暴力铁定拿低分！！！&lt;/p&gt;
&lt;p&gt;本题数据非常弱，大模拟90分，除了最后一个点TLE了，其他都能很快AC，如果真是到了赛场上，没时间做这个题或者觉得代码难度较高的话，暴力的解法不妨一试！&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="ST表" scheme="https://www.ljhedp.cn/tags/ST%E8%A1%A8/"/>
    
      <category term="模拟" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>模板-01背包</title>
    <link href="https://www.ljhedp.cn/post/76fee62b.html"/>
    <id>https://www.ljhedp.cn/post/76fee62b.html</id>
    <published>2018-11-11T13:38:41.000Z</published>
    <updated>2018-12-23T02:19:50.121Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int MAXC=10001;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int C[MAXC],W[MAXC];</span><br><span class="line">    int f[MAXC];</span><br><span class="line">    int n,V;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;V;</span><br><span class="line">    memset(f,0,sizeof(f));</span><br><span class="line">    for(int i = 1; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;C[i]&gt;&gt;W[i];</span><br><span class="line">        for(int j=V;j&gt;=C[i];j--)</span><br><span class="line">        &#123;</span><br><span class="line">                if(f[j]&lt;f[j-C[i]]+W[i])</span><br><span class="line">                f[j]=f[j-C[i]]+W[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;f[V];</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="信息学竞赛(OI)" scheme="https://www.ljhedp.cn/categories/%E4%BF%A1%E6%81%AF%E5%AD%A6%E7%AB%9E%E8%B5%9B-OI/"/>
    
    
      <category term="dp" scheme="https://www.ljhedp.cn/tags/dp/"/>
    
      <category term="背包问题" scheme="https://www.ljhedp.cn/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
      <category term="模板" scheme="https://www.ljhedp.cn/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="01背包" scheme="https://www.ljhedp.cn/tags/01%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
</feed>
